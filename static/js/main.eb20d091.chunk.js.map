{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/Signin/Signin.js","components/Register/Register.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","brain","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","href","React","Component","Register","onNameChange","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","entries","ImageLinkForm","onInputChange","onButtonSubmit","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.eb20d091.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if (isSignedIn) {\r\n            return( \r\n                <nav style= {{ display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick= {() => onRouteChange ('signout')} className=' f3 link dim black underline pa3 pointer fw7'>Sign Out</p>\r\n                </nav>\r\n            );\r\n    }   else{\r\n            return(\r\n                <nav style= {{ display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick= {() => onRouteChange ('signin')} className=' f3 link dim black underline pa3 pointer fw7'>Sign In</p>\r\n                <p onClick= {() => onRouteChange ('register')} className=' f3 link dim black underline pa3 pointer fw7'>Register</p>\r\n                </nav>\r\n                \r\n            );\r\n\r\n        }\r\n    \r\n\r\n}\r\n\r\n\r\nexport default Navigation","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png'\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className= 'ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner\"> \r\n                    <img style= {{paddingTop:'9px'}}alt='logo' src= {brain}/> \r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Logo","import React from 'react';\r\n\r\n\r\nclass Signin extends React.Component {\r\n   \r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        signInEmail:'',\r\n        signInPassword:''\r\n\r\n      }\r\n\r\n    }\r\n    \r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('http://localhost:3000/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email:this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n\r\n    })\r\n      .then(response=> response.json())\r\n      .then (user => {\r\n        if(user.id){\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      } )\r\n    \r\n  }\r\n\r\n  render () { \r\n    const { onRouteChange} = this.props;\r\n    return (\r\n      <article className=\"br4 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\"> \r\n            <main className=\"pa4 black-80\">\r\n              <div className=\"measure\">\r\n                  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\"> Sign In </legend>\r\n                      <div className=\"mt3 \">\r\n                        <label className=\"db fw6 lh-copy f6 \" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"email \" \r\n                        name=\"email-address\"  \r\n                        id=\"email-address\" \r\n                        onChange= {this.onEmailChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\"  \r\n                        id=\"password\"\r\n                        onChange= {this.onPasswordChange}\r\n                        />\r\n                      </div>\r\n                  \r\n                  </fieldset>\r\n                  <div className=\"\">\r\n                    <input \r\n                    onClick = { this.onSubmitSignIn }\r\n                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                    type=\"submit\" \r\n                    value=\"Sign in\"/>\r\n                  </div>\r\n                  <div className=\"lh-copy mt3\">\r\n                    <p onClick = { () => onRouteChange ('register')} href=\"#0\" className=\"f6 link dim black db pointer\"> Register </p>\r\n                \r\n                </div>\r\n              </div>\r\n          </main>\r\n\r\n      </article>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n  }  \r\n\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n// import { render } from '@testing-library/react';\r\n\r\n\r\nclass Register extends React.Component {\r\n   \r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n            email:'',\r\n            password:'',\r\n            name: ''\r\n          }\r\n\r\n      }\r\n\r\n\r\n    onNameChange = (event) => {\r\n      this.setState({name: event.target.value})\r\n    }\r\n    onEmailChange = (event) => {\r\n      this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n      this.setState({password: event.target.value})\r\n\r\n    }\r\n    onSubmitSignIn = () => {\r\n      fetch('http://localhost:3000/register', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          email:this.state.email,\r\n          password: this.state.password,\r\n          name: this.state.name\r\n        })\r\n  \r\n      })\r\n        .then(response=> response.json())\r\n        .then (user => {\r\n          if (user.id) {\r\n            this.props.loadUser(user);\r\n            this.props.onRouteChange('home');\r\n          }\r\n        } )\r\n      \r\n    }\r\n\r\n\r\n  render() { \r\n      \r\n    return (\r\n        <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\"> \r\n            <main className=\"pa4 black-80\">\r\n              <div className=\"measure\">\r\n                  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\"> Register </legend>\r\n\r\n                      <div className=\"mt3 \">\r\n                        <label className=\"db fw6 lh-copy f6 \" htmlFor=\"name\">Name</label>\r\n                        <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 \" \r\n                        type=\"text\"\r\n                        name=\"name\"  \r\n                        id=\"name\"\r\n                        onChange= {this.onNameChange}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"mt3 \">\r\n                        <label className=\"db fw6 lh-copy f6 \" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 \" \r\n                        type=\"email\" \r\n                        name=\"email-address\"  \r\n                        id=\"email-address\"\r\n                        onChange={this.onEmailChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\"  \r\n                        id=\"password\"\r\n                        onChange={this.onPasswordChange}\r\n                        />\r\n                      </div>\r\n                  \r\n                  </fieldset>\r\n                  <div className=\"\">\r\n                    <input \r\n                    onClick = { this.onSubmitSignIn}\r\n                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                    type=\"submit\" \r\n                    value=\"Register\"\r\n                    />\r\n                  </div>\r\n                  \r\n              </div>\r\n            </main>\r\n        </article>\r\n\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n   \r\n    return (\r\n       <div className ='center ma'>\r\n\r\n            <div className= 'absolute mt2'>\r\n                <img id= 'inputimage' alt='' src = {imageUrl} width= '500px' height='auto'/>\r\n                <div className='bounding-box' style = {{ top:box.topRow, right: box.rightCol, bottom: box.bottomRow, \r\n                    left: box.leftCol}}></div>\r\n            </div>\r\n        \r\n       </div>\r\n    );\r\n\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n\r\n        <div>\r\n            <div className='dark-red f2 fw8'>\r\n                {`${name}, your current entry count is...`}\r\n            </div>\r\n    \r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n       \r\n    );\r\n\r\n}\r\n\r\nexport default Rank","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className='f3 fw6'>\r\n                {'This Magic Brain will detect faces in your pictures. Git it a try.'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className= 'form center pa4 br3 shadow-5'>\r\n                \r\n                    <input className='f4 pa2 w-70 center'  type='tex' onChange={onInputChange}/>\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-dark-blue hover-bg-near-black'\r\n                    onClick={onButtonSubmit}\r\n                    >Detect</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ImageLinkForm;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\n\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Rank from './components/Rank/Rank.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport './App.css';\n\n\n\nconst particlesOptions= {\n  \n  particles: {\n    \n    number: {\n      value:90,\n      density: {\n        enable: true,\n        value_area:800\n      \n      }\n    }\n   \n  }\n  \n}\n\nconst initialState = {\n  \n    input:'',\n    imageUrl:'',\n    box: {},\n    route:'signin',\n    isSignedIn:false,\n    user: {\n      id:'',\n      name:'',\n      email:'',\n      entries: 0,\n      joined:''\n    }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n \n  loadUser = (data) => {\n        this.setState( {user: {\n          id:data.id,\n          name:data.name,\n          email:data.email,\n          entries:data.entries,\n          joined:data.joined    \n\n    }\n  })\n  }\n  \n  calculateFaceLocation = (data) => {\n    const clarifaiFace= data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return{\n      leftCol:clarifaiFace.left_col * width,\n      topRow:clarifaiFace.top_row * height,\n      rightCol:width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n\n    }\n\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('http://localhost:3000/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n        \n      })\n\n    })\n      .then (response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n              \n            })\n      \n          })\n           \n           .then(response => response.json())\n           .then(count => {\n             this.setState(Object.assign(this.state.user,{entries: count}))\n            })        \n            .catch(console.log)\n        }\n        \n      this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n\n      .catch(err => console.log(err));\n    \n  }\n\n  onRouteChange = (route) => { \n      if (route === 'signout') {\n        this.setState(initialState)\n      } else if (route ==='home') {\n          this.setState({isSignedIn: true})\n      }\n      this.setState({route: route});\n    \n  }\n  render() {\n       const {isSignedIn, imageUrl, route, box} = this.state;\n      return (\n        <div className=\"App\">\n          <Particles className='particles'\n              params={particlesOptions}\n              \n          />\n          <Navigation isSignedIn= {isSignedIn} onRouteChange= {this.onRouteChange}/>\n          {route === 'home'\n            ? <div> \n                <Logo/>\n                <Rank \n                name={this.state.user.name} \n                entries= {this.state.user.entries} />\n                <ImageLinkForm \n                onInputChange= {this.onInputChange} \n                onButtonSubmit= {this.onButtonSubmit}\n                />\n                <FaceRecognition box= {box} imageUrl={imageUrl}/>\n              </div>\n            :(\n              route === 'signin' \n              ? <Signin loadUser = {this.loadUser} onRouteChange= {this.onRouteChange}/>\n              : <Register loadUser = {this.loadUser} onRouteChange= {this.onRouteChange}/>\n              \n            )\n\n              \n          }\n\n        </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.a9a31672.png\";"],"sourceRoot":""}